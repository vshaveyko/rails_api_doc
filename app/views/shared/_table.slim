- nesting = nesting + [model] # do not mutate nesting value

div.flex-table

  / header row
  = form_tag(api_doc_url(params.merge(nesting: nesting)), class: 'flex-line row') do

    - headers.each.with_index do |(header, settings), index|
      h1.flex-item
        - if index.zero?
          span.ico ＋
          span.exit.ico ❌
          = submit_tag '✓'

        = render 'shared/param_inputs', settings: settings, val: ''

        span.title = header

  - rows.each do |row_name, row_values|

    = form_tag(api_doc_url(params.merge(nesting: nesting, id: row_values.param&.id)), method: :put,  class: "flex-line row #{'destroyed' if row_values.destroyed?} #{'updated' if row_values.updated?} #{'created' if row_values.created?}") do

      - headers.each_value.with_index do |(header_settings), index|

        - param_value = header_settings[:value].call(row_name, row_values)

        div.flex-item[class="#{'next-is-nested' if row_values.nested?}"]

          - if index.zero?
            span.ico ✏
            / = submit_tag ,name: 'destroy', class: 'ico destroy'
            = link_to '❌' , api_doc_url(construct_destroy_param(row_values, params, nesting)), method: :delete,data: { confirm: 'Are you sure?' }, class: 'destroy ico'
            span.exit.ico ❌
            = submit_tag '✔'

          = render 'shared/param_inputs', settings: header_settings, val: param_value

          span.title = param_value

    - if row_values.nested?

      = render 'shared/table', nesting: nesting, model: row_values[:model] || row_name, rows: row_values.nested, headers: headers, params: params
